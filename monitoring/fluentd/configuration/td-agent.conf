##### Specifies the log level e.g. trace, debug, info, warn, error, or fatal.
<system>
    log_level info
</system>
##### This source reads tail of a file
# <source>
#   @type tail
#   format json
#   read_from_head true
#   tag file-myapp.log
#   path /fluentd/log/files/example-log.log
#   pos_file /tmp/example-log.log.pos
# </source>

# <filter file-myapp.log>
#   @type record_transformer
#   <record>
#     host_param "#{Socket.gethostname}"
#   </record>
# </filter>

##### This source reads syslogs
<source>
    @type syslog
    port 5140
    bind 0.0.0.0
    protocol_type tcp
    tag IT_WinOps
    <parse>
        @type none
    </parse>
</source>
<source>
    @type syslog
    port 514
    bind 0.0.0.0
    protocol_type udp
    tag IT_NetOps
    <parse>
        @type none
    </parse>
</source>

##### This source reads Windows Event logs
<source>
  @type windows_eventlog2
  @id windows_eventlog2
  channels security # You can use application,system. Also be able to use `<subscribe>` directive.
  read_existing_events false
  read_interval 2
  tag winevt.raw
  render_as_xml false       # default is false.
  rate_limit 200            # default is -1(Winevt::EventLog::Subscribe::RATE_INFINITE).
  # preserve_qualifiers_on_hash true # default is false.
  # read_all_channels false # default is false.
  # description_locale en_US # default is nil. It means that system locale is used for obtaining description.
  # refresh_subscription_interval 10m # default is nil. It specifies refresh interval for channel subscriptions.
  # event_query "Event/System[EventID!=1001]" # default is "*".
  <storage>
    @type local             # @type local is the default.
    persistent true         # default is true. Set to false to use in-memory storage.
    path C:\Windows\Temp\storage.json # This is required when persistent is true. If migrating from eventlog v1 please ensure that you remove the old .pos folder
                            # Or, please consider using <system> section's `root_dir` parameter.
  </storage>
  # <parse> # Note: parsing is only available when render_as_xml true
  #  @type winevt_xml # @type winevt_xml is the default. winevt_xml and none parsers are supported for now.
    # When set up it as true, this plugin preserves "Qualifiers" and "EventID" keys.
    # When set up it as false, this plugin calculates actual "EventID" from "Qualifiers" and removing "Qualifiers".
    # With the following equation:
    # (EventID & 0xffff) | (Qualifiers & 0xffff) << 16
    # preserve_qualifiers true # preserve_qualifiers_on_hash can be used as a setting outside <parse> if render_as_xml is false
  # </parse>
   <subscribe>
     channels security #, application, system
     read_existing_events false # read_existing_events should be applied each of subscribe directive(s)
     remote_server PUT_SERVER_IP_HERE # Remote server ip/fqdn
     remote_domain PUT_DOMAIN_HERE # Domain name
     remote_username PUT_SERVICE_ACCOUNT_HERE # Remoting access account name
     remote_password PUT_PASSWORD_HERE # Remoting access account password
   </subscribe>
   <subscribe>
     channels security #, application, system
     read_existing_events false # read_existing_events should be applied each of subscribe directive(s)
     remote_server PUT_SERVER_IP_HERE # Remote server ip/fqdn
     remote_domain PUT_DOMAIN_HERE # Domain name
     remote_username PUT_SERVICE_ACCOUNT_HERE # Remoting access account name
     remote_password PUT_PASSWORD_HERE # Remoting access account password
   </subscribe>
</source>

##### This source gets incoming logs over HTTP
# <source>
#   @type http
#   port 9880
#   bind 0.0.0.0
#   body_size_limit 32m
#   keepalive_timeout 10s
# </source>

# <filter http-*.log>
#   @type record_transformer
#   <record>
#     host_param "#{Socket.gethostname}"
#   </record>
# </filter>

##### This source gets all logs from local docker host
# <source>
#   @type tail
#   format json
#   read_from_head true
#   tag docker.log
#   path /fluentd/log/containers/*/*-json.log
#   pos_file /tmp/container-logs.pos
# </source>

##### Send all logs to elastic search
<match **>
    @type forward
    @id   forward1
    transport tls
    tls_verify_hostname true
    tls_client_cert_path C:\opt\td-agent\ssl\it-lgin-cert.pem
    tls_client_private_key_path C:\opt\td-agent\ssl\it-lgin-privkey.pem
    heartbeat_type tcp
    heartbeat_interval 5
    phi_threshold 200
    compress gzip
    <server>
        host PUT_HOST_ADDRESS_HERE
        port 24224
    </server>
    <buffer>
        @type memory
        compress gzip
        flush_thread_count 4
        overflow_action drop_oldest_chunk
    </buffer>
</match>
